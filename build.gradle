plugins {
	id 'fabric-loom' version "1.7-SNAPSHOT"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.0.0"
}

loom {
	accessWidenerPath = file("src/main/resources/relicex.accesswidener")
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		name = "wispForestReleases"
		url = uri("https://maven.wispforest.io/releases")
	}
	maven {
		name = "Ladysnake"
		url = "https://maven.ladysnake.org/releases"
	}
	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me/"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com"
	}
	maven {
		name = "Nucleoid"
		url = "https://maven.nucleoid.xyz/"
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:data-attributes-directors-cut:${project.data_attributes_version}"
	modImplementation "maven.modrinth:opc-directors-cut:${project.opc_version}"

	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
    modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_components_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}")
	modImplementation "eu.pb4:placeholder-api:${project.placeholder_api}"
	implementation 'net.objecthunter:exp4j:0.4.8'
	modImplementation include("maven.modrinth:armorrenderlib-directors-cut:${project.arl_version}")
	modApi "maven.modrinth:playerex-directors-cut:${project.playerex_version}"
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation include("io.wispforest:endec:${project.endec_version}")
	modImplementation include("io.wispforest.endec:gson:${project.endec_gson_version}")
	modImplementation include("io.wispforest.endec:netty:${project.endec_netty_version}")

	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
	include "io.wispforest:owo-sentinel:${project.owo_version}"

	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixinextras_version}")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

fabricApi {
	configureDataGeneration()
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		
	}
}